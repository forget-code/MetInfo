<?php# MetInfo Enterprise Content Management System # Copyright (C) MetInfo Co.,Ltd (http://www.metinfo.cn). All rights reserved. defined('IN_MET') or exit('No permission');ini_set('date.timezone','Asia/Shanghai');load::mod_class('pay/web/pay');//require_once 'paypal/paypal_config.php';require_once 'paypal/paypal_functions.php';class paypal extends pay {    public function __construct() {        global $_M;        parent::__construct();    }        /**     * 订单参数提交     */    public function paypal($date) {        global $_M;        //自定义logo        $logo_img = $_M['config']['met_logo'];        if(strstr($_M['config']['met_logo'],"../"))        $logo_img = is_strinclude($_M['url']['site'], 'localhost')?'https://mall.kisbox.com/upload/201509/1442809180.png':($_M['url']['site'].substr ($_M['config']['met_logo'], 3));        $_SESSION['out_trade_no'] = $date['out_trade_no'];        //订单详细参数        $goodinfo = explode('*',$date['subject']);        /*dump(CANCEL_URL);        die();*/        $itemDetail = array(            "buyer_email"                   => "",                              //买家账号            "buyer_password"                => "",                              //买家密码            "L_PAYMENTREQUEST_0_NAME0"      => $goodinfo[0],                    //商品名称            "L_PAYMENTREQUEST_0_NUMBER0"    => $date['product_id'],             //商品ID            "L_PAYMENTREQUEST_0_DESC0"      => $date['body'],                   //商品描述            "L_PAYMENTREQUEST_0_QTY0"       => '1',                             //商品数量            "PAYMENTREQUEST_0_ITEMAMT"      => $date['total_fee'],              //商品单价            "PAYMENTREQUEST_0_TAXAMT"       => "0.00",                          //增值税            "PAYMENTREQUEST_0_SHIPPINGAMT"  => "0.00",                          //运费            "PAYMENTREQUEST_0_HANDLINGAMT"  => "0.00",                          //手续费            "PAYMENTREQUEST_0_SHIPDISCAMT"  => "0.00",                          //运费折扣金额-优惠金额            "PAYMENTREQUEST_0_INSURANCEAMT" => "0.00",                          //保险金额            "PAYMENTREQUEST_0_AMT"          => $date['total_fee'],              //合计金额            "LOGOIMG"                       => $logo_img,                       //Paypal账单支付页面顶部自定义LOGO            "currencyCodeType"              => "USD",                           //货币代码            #"currencyCodeType"              => "CNY",                           //货币代码            "checkout"                      => 'Proceed to Checkout',           //            "L_PAYMENTREQUEST_0_AMT0"       => $date['total_fee'],              //            "RETURN_URL"                    => $date['return_url'],                                 //返回地址            "CANCEL_URL"                    => CANCEL_URL                       //取消地址                    );        //订单运输参数        $shippingDetail = array(            /*            'L_PAYMENTREQUEST_FIRSTNAME'        => '米',                        //收件人【姓】            'L_PAYMENTREQUEST_LASTNAME'         => '拓',                        //收件人【名】            'PAYMENTREQUEST_0_SHIPTOSTREET'     => 'wuzhongqu',                 //街道地址1            'PAYMENTREQUEST_0_SHIPTOSTREET2'    => '进不去街道',                  //街道地址2            'PAYMENTREQUEST_0_SHIPTOCITY'       => 'suzhou',                    //城市            'PAYMENTREQUEST_0_SHIPTOSTATE'      => 'jiangsu',                   //省            'PAYMENTREQUEST_0_SHIPTOZIP'        => '215000',                    //邮编            'PAYMENTREQUEST_0_SHIPTOCOUNTRY'    => 'CN',                        //国家            'PAYMENTREQUEST_0_SHIPTOPHONENUM'   => '13823232323',               //手机号码            'shipping_method'                   => '0.00',                      //运输费用            */            'L_PAYMENTREQUEST_0_AMT'            => $date['total_fee'],      //商品单价            'L_PAYMENTREQUEST_FIRSTNAME'        => '',                      //收件人【姓】            'L_PAYMENTREQUEST_LASTNAME'         => '',                      //收件人【名】            'PAYMENTREQUEST_0_SHIPTOSTREET'     => '',                      //街道地址1            'PAYMENTREQUEST_0_SHIPTOSTREET2'    => '',                      //街道地址2            'PAYMENTREQUEST_0_SHIPTOCITY'       => '',                      //城市            'PAYMENTREQUEST_0_SHIPTOSTATE'      => '',                      //省            'PAYMENTREQUEST_0_SHIPTOZIP'        => '',                      //邮编            'PAYMENTREQUEST_0_SHIPTOCOUNTRY'    => '',                      //国家            'PAYMENTREQUEST_0_SHIPTOPHONENUM'   => '',                      //手机号码            //            'shipping_method'                   => '0.00',                   //运输费用            'paymentMethod'                     => 'paypal_express',         //付款方式            'PlaceOrder'                        => 'Place Order'             //下单        );        //根据运输方式及相关费用优惠重新计算订单总金额        $paymentAmount = $itemDetail['PAYMENTREQUEST_0_AMT'];        if(isset($shippingDetail['shipping_method'])) {            $new_shipping = $shippingDetail['shipping_method'];            if($itemDetail['PAYMENTREQUEST_0_SHIPPINGAMT'] > 0){                $paymentAmount = ($paymentAmount + $new_shipping) - $itemDetail['PAYMENTREQUEST_0_SHIPPINGAMT'];                $itemDetail['PAYMENTREQUEST_0_SHIPPINGAMT'] = $new_shipping;                $itemDetail['PAYMENTREQUEST_0_AMT'] = $paymentAmount;            }        }        //$resArray = CallShortcutExpressCheckout ($_POST, $returnURL, $cancelURL);        $resArray = CallMarkExpressCheckout ($paymentAmount, $shippingDetail, $itemDetail);        $ack = strtoupper($resArray["ACK"]);        if($ack=="SUCCESS" || $ack=="SUCCESSWITHWARNING")        {            RedirectToPayPal ( $resArray["TOKEN"] );        }         else          {            /*dump($resArray);            die();*/             $ErrorCode         = urldecode($resArray["L_ERRORCODE0"]);             $ErrorShortMsg     = urldecode($resArray["L_SHORTMESSAGE0"]);             $ErrorLongMsg      = urldecode($resArray["L_LONGMESSAGE0"]);             $ErrorSeverityCode = urldecode($resArray["L_SEVERITYCODE0"]);             echo "SetExpressCheckout API call failed. <br>";             echo "Detailed Error Message: " . $ErrorLongMsg ."<br>";             echo "Short Error Message: " . $ErrorShortMsg ."<br>";             echo "Error Code: " . $ErrorCode."<br>";             echo "Error Severity Code: " . $ErrorSeverityCode ."<br>";        }    }        /*     * 订单确认支付     */    public function ConfirmPayment() {        global $_M;                $finalPaymentAmount   = $_SESSION["Payment_Amount"];        $_SESSION['payer_id'] = $_GET['PayerID'];                               //关键参数:将Paypal返回的支付用户ID存储到session，确认支付function执行时会被调用        $out_trade_no         = $_SESSION['out_trade_no'];        $token = "";        if (isset($_REQUEST['token']))        {            $token = $_REQUEST['token'];        } else if(isset($_SESSION['TOKEN']))        {            $token = $_SESSION['TOKEN'];        }        //$token 不为空则根据令牌查询订单信息        if ( $token != "" )        {            $resArrayGetExpressCheckout = GetShippingDetails( $token );         //根据token向Paypal提交订单信息查询            $ackGetExpressCheckout = strtoupper($resArrayGetExpressCheckout["ACK"]);            if( $ackGetExpressCheckout == "SUCCESS" || $ackGetExpressCheckout == "SUCESSWITHWARNING")             {                $email              = $resArrayGetExpressCheckout["EMAIL"];                $payerId            = $resArrayGetExpressCheckout["PAYERID"];                $payerStatus        = $resArrayGetExpressCheckout["PAYERSTATUS"];                $firstName          = $resArrayGetExpressCheckout["FIRSTNAME"];                $lastName           = $resArrayGetExpressCheckout["LASTNAME"];                $cntryCode          = $resArrayGetExpressCheckout["COUNTRYCODE"];                $shipToName         = $resArrayGetExpressCheckout["PAYMENTREQUEST_0_SHIPTONAME"];                $shipToStreet       = $resArrayGetExpressCheckout["PAYMENTREQUEST_0_SHIPTOSTREET"];                $shipToCity         = $resArrayGetExpressCheckout["PAYMENTREQUEST_0_SHIPTOCITY"];                $shipToState        = $resArrayGetExpressCheckout["PAYMENTREQUEST_0_SHIPTOSTATE"];                $shipToCntryCode    = $resArrayGetExpressCheckout["PAYMENTREQUEST_0_SHIPTOCOUNTRYCODE"];                $shipToZip          = $resArrayGetExpressCheckout["PAYMENTREQUEST_0_SHIPTOZIP"];                $addressStatus      = $resArrayGetExpressCheckout["ADDRESSSTATUS"];                $totalAmt           = $resArrayGetExpressCheckout["PAYMENTREQUEST_0_AMT"];                $currencyCode       = $resArrayGetExpressCheckout["CURRENCYCODE"];                $shippingAmt        = $resArrayGetExpressCheckout["PAYMENTREQUEST_0_SHIPPINGAMT"];                /*                * Add check here to verify if the payment amount stored in session is the same as the one returned from GetExpressCheckoutDetails API call                * Checks whether the session has been compromised                */                if($_SESSION["Payment_Amount"] != $totalAmt || $_SESSION["currencyCodeType"] != $currencyCode)                exit("Parameters in session do not match those in PayPal API calls");            }             else              {                $ErrorCode          = urldecode($resArrayGetExpressCheckout["L_ERRORCODE0"]);                $ErrorShortMsg      = urldecode($resArrayGetExpressCheckout["L_SHORTMESSAGE0"]);                $ErrorLongMsg       = urldecode($resArrayGetExpressCheckout["L_LONGMESSAGE0"]);                $ErrorSeverityCode  = urldecode($resArrayGetExpressCheckout["L_SEVERITYCODE0"]);                echo "GetExpressCheckoutDetails API call failed. ";                echo "Detailed Error Message: " . $ErrorLongMsg;                echo "Short Error Message: " . $ErrorShortMsg;                echo "Error Code: " . $ErrorCode;                echo "Error Severity Code: " . $ErrorSeverityCode;            }        }            if(!USERACTION_FLAG && !isset($_SESSION['EXPRESS_MARK'])){            if(isset($_POST['shipping_method']))                $new_shipping = $_POST['shipping_method'];                if($shippingAmt > 0){                    $finalPaymentAmount = ($totalAmt + $new_shipping) - $_SESSION['shippingAmt'];                    $_SESSION['shippingAmt'] = $new_shipping;                }    }    //确认支付    $resArrayDoExpressCheckout = ConfirmPayment ( $finalPaymentAmount );    $ackDoExpressCheckout = strtoupper($resArrayDoExpressCheckout["ACK"]);    session_unset();                                                        // 释放所有session变量    session_destroy();                                                      // 销毁session        /*dump($resArrayDoExpressCheckout);        dump($ackDoExpressCheckout);        die();*/    if( $ackDoExpressCheckout == "SUCCESS" || $ackDoExpressCheckout == "SUCCESSWITHWARNING" )    {            $transactionId      = $resArrayDoExpressCheckout["PAYMENTINFO_0_TRANSACTIONID"];            $transactionType    = $resArrayDoExpressCheckout["PAYMENTINFO_0_TRANSACTIONTYPE"];             $paymentType        = $resArrayDoExpressCheckout["PAYMENTINFO_0_PAYMENTTYPE"];             $orderTime          = $resArrayDoExpressCheckout["PAYMENTINFO_0_ORDERTIME"];            $amt                = $resArrayDoExpressCheckout["PAYMENTINFO_0_AMT"];            $currencyCode       = $resArrayDoExpressCheckout["PAYMENTINFO_0_CURRENCYCODE"];            $paymentStatus  = $resArrayDoExpressCheckout["PAYMENTINFO_0_PAYMENTSTATUS"];            $pendingReason  = $resArrayDoExpressCheckout["PAYMENTINFO_0_PENDINGREASON"];            $reasonCode         = $resArrayDoExpressCheckout["PAYMENTINFO_0_REASONCODE"];            $token              = $resArrayDoExpressCheckout["TOKEN"];            //header("Location:{$_M['url']['site']}pay/return.php?out_trade_no={$out_trade_no}&token={$token}");            //支付成功 订单信息入库            header("Location:{$_M['url']['site']}pay/notify.php?out_trade_no={$out_trade_no}&pay_type=5");    }    else      {            $ErrorCode          = urldecode($resArrayDoExpressCheckout["L_ERRORCODE0"]);            $ErrorShortMsg      = urldecode($resArrayDoExpressCheckout["L_SHORTMESSAGE0"]);            $ErrorLongMsg       = urldecode($resArrayDoExpressCheckout["L_LONGMESSAGE0"]);            $ErrorSeverityCode  = urldecode($resArrayDoExpressCheckout["L_SEVERITYCODE0"]);            if($ErrorCode == 10486)            {                RedirectToPayPal ( $resArray["TOKEN"] );            }            else            {                echo "DoExpressCheckout API call failed. ";                echo "Detailed Error Message: " . $ErrorLongMsg;                echo "Short Error Message: " . $ErrorShortMsg;                echo "Error Code: " . $ErrorCode;                echo "Error Severity Code: " . $ErrorSeverityCode;            }    }    }        /*     * 同步通知     * PayPal同步通知即为账单支付验证确认方法     */    function doreturn($token) {        global $_M;        $resArrayGetExpressCheckout = GetShippingDetails( $token );             //根据token向Paypal提交订单信息查询        $CheckOutStatus = $resArrayGetExpressCheckout['CHECKOUTSTATUS'];        //支付状态        if($CheckOutStatus === 'PaymentActionCompleted')        {            //return TRUE;            return $resArrayGetExpressCheckout['PAYERID'];        }        else        {            return FALSE;        }            }}# This program is an open source system, commercial use, please consciously to purchase commercial license.# Copyright (C) MetInfo Co., Ltd. (http://www.metinfo.cn). All rights reserved.?>